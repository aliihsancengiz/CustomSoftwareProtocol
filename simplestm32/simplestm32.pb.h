/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.3-dev */

#ifndef PB_SIMPLESTM32_PB_H_INCLUDED
#define PB_SIMPLESTM32_PB_H_INCLUDED
#include "pb/pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _comMessage {
    uint32_t pot_val1;
    uint32_t pot_val2;
} comMessage;


/* Initializer values for message structs */
#define comMessage_init_default                  {0, 0}
#define comMessage_init_zero                     {0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define comMessage_pot_val1_tag                  1
#define comMessage_pot_val2_tag                  2

/* Struct field encoding specification for nanopb */
#define comMessage_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, UINT32,   pot_val1,          1) \
X(a, STATIC,   REQUIRED, UINT32,   pot_val2,          2)
#define comMessage_CALLBACK NULL
#define comMessage_DEFAULT NULL

extern const pb_msgdesc_t comMessage_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define comMessage_fields &comMessage_msg

/* Maximum encoded size of messages (where known) */
#define comMessage_size                          12

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
